---

- name: simple-provisioning
  hosts: localhost          #provisioning 이기 때문에 localhost를 입력한다
  connection: local         #ssh로 접속하지 않으므로 local을 입력한다.
  gather_facts: false       #시작할때 host의 정보를 수집하지 않겠다는 뜻 
  vars:
    aws_region: ap-northeast-2   #서율리전
#    aws_region: ap-northeast-1   #도쿄리전
    vpc_name: simple-vpc
    vpc_cidr_block: 10.210.0.0/16  #B클래스 크기
    subnet_cidr_block: 10.210.1.0/24  #C클래스 크기
    instance_image: ami-0b827f3319f7447c6  #서울리전
#    instance_image: ami-06098fd00463352b6  #도쿄리전
    ec2_key_name: youngki-seoul
    instance_type: t3.nano
    
  tasks:
  - name: create vpc
    ec2_vpc_net:
      name: "{{ vpc_name }}"
      cidr_block: "{{ vpc_cidr_block }}"
      region: "{{ aws_region }}"
      tags:
        Name: "{{ vpc_name }}"
      tenancy: default      #전용 VPC가 아닌 기본 VPC사용
    register: result_vpc
    
  - name: Create subnet
    ec2_vpc_subnet:
      state: present
      region: "{{ aws_region }}"            #region은 반드시 추가하자
      vpc_id: "{{ result_vpc.vpc.id }}"
      cidr: "{{ subnet_cidr_block }}"
      tags:
        Name: webserver Subnet
    register: result_subnet
    
  - name: create igw
    ec2_vpc_igw:
      region: "{{ aws_region }}"            #region은 반드시 추가하자
      vpc_id: "{{ result_vpc.vpc.id }}"
      state: present
    register: result_igw
    
  - name: Set up public subnet route table
    ec2_vpc_route_table:
      vpc_id: "{{ result_vpc.vpc.id }}"
      region: "{{ aws_region }}"
      tags:
        Name: Public
      subnets:
        - "{{ result_subnet.subnet.id }}"
      routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ result_igw.gateway_id }}"
    register: result_route_table
    
  - name: create security group
    ec2_group:
      name: public SG
      description: sg with rule descriptions
      vpc_id: "{{ result_vpc.vpc.id }}"
#      profile: "{{ aws_profile }}"        #devOS에 Credential을 등록했기때문에 생략한다
      region: "{{ aws_region }}"
      rules:
        - proto: tcp
          ports:
          - 80
          - 22               #ansible설치를 위해 추가한다
          cidr_ip: 0.0.0.0/0
          rule_desc: allow all on port 80
          
  - name: create EC2
    ec2:
      key_name: "{{ ec2_key_name }}"
      instance_type: "{{ instance_type }}"
      image: "{{ instance_image }}"
      wait: no               #생성완료까지 기다리지 않으므로 no로 변경
      group: public SG       #scurity group이름 입력
      count: 1
      region: "{{ aws_region }}"
      vpc_subnet_id: "{{ result_subnet.subnet.id }}"
      assign_public_ip: yes
      instance_tags:
       Name: webserver